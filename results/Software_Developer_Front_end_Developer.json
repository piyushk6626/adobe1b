{
  "main_persona": "Software Developer",
  "sub_persona": "Front-end Developer",
  "details": "#### Primary Objective:\nRetrieve all technical documentation, code examples, design specifications, and best practices related to building and maintaining user interfaces for web and mobile applications.\n\n#### Core Information to Retrieve:\n-   **Core Languages:** Code blocks and documentation for HTML, CSS, JavaScript (JS), and TypeScript (TS).\n-   **Frameworks & Libraries:** References to React, Angular, Vue, Svelte, jQuery.\n-   **Styling & CSS:** Information on Tailwind CSS, Bootstrap, Sass/SCSS, Material-UI, styled-components, CSS-in-JS.\n-   **State Management:** Keywords like \"Redux,\" \"MobX,\" \"Zustand,\" \"Vuex,\" \"React Context,\" \"state,\" \"props.\"\n-   **API & Data Fetching:** Phrases like \"API endpoint,\" \"REST API,\" \"GraphQL,\" \"JSON,\" \"fetch,\" \"axios,\" \"async/await,\" \"React Query,\" \"Apollo Client.\"\n-   **Build Tools & Environment:** Configuration and commands for \"npm,\" \"yarn,\" \"Webpack,\" \"Vite,\" \"Babel,\" \"ESLint,\" \"Prettier.\"\n-   **Testing:** Code and documentation related to \"Jest,\" \"Vitest,\" \"Cypress,\" \"Playwright,\" \"Storybook,\" \"unit test,\" \"integration test,\" \"E2E test.\"\n-   **Performance:** Concepts like \"Core Web Vitals,\" \"lazy loading,\" \"code splitting,\" \"tree shaking,\" \"bundle size,\" \"optimization,\" \"Lighthouse score.\"\n-   **Accessibility (a11y):** Keywords like \"WCAG,\" \"ARIA labels,\" \"screen reader,\" \"semantic HTML,\" \"keyboard navigation.\"\n-   **Browser Concepts:** Terms such as \"DOM,\" \"Virtual DOM,\" \"cross-browser compatibility,\" \"service workers,\" \"local storage.\"\n-   **UI/UX:** References to \"design system,\" \"style guide,\" \"component library,\" \"wireframe,\" \"mockup,\" \"user interface.\"\n-   **Version Control:** Commands and discussions about \"Git,\" \"pull request,\" \"branch,\" \"merge,\" \"commit.\"\n\n#### Information to Ignore (Noise):\n-   **Back-end Languages & Frameworks:** Python (Django, Flask), Java (Spring), PHP (Laravel), Ruby (Rails), C# (.NET).\n-   **Database Operations:** SQL queries, database schemas, \"PostgreSQL,\" \"MySQL,\" \"MongoDB,\" \"NoSQL.\"\n-   **Server & Infrastructure:** \"Docker,\" \"Kubernetes,\" \"AWS,\" \"Azure,\" \"nginx,\" \"server configuration,\" \"load balancing.\"\n-   **Marketing & Business Documents:** Sales reports, marketing campaigns, user acquisition metrics, financial statements, investor briefings.\n-   **HR & Administrative Content:** Company policies, employee performance reviews, organizational charts, recruiting pipelines.\n-   **Low-level Systems Programming:** C, C++, Assembly, memory management, kernel details."
}