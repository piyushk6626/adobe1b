{
  "main_persona": "Quality Assurance Tester",
  "sub_persona": "Performance Tester",
  "details": "#### Primary Objective:\nRetrieve all technical data, metrics, and specifications necessary to analyze and report on the speed, stability, and scalability of a software application under various load conditions.\n\n#### Core Information to Retrieve:\n-   **Performance Metrics:** Response time, latency, throughput, requests per second (RPS), transactions per second (TPS), error rates, p95/p99 latency.\n-   **Resource Utilization:** CPU usage, memory consumption, disk I/O, network bandwidth, garbage collection (GC) stats, database connections.\n-   **Testing Types & Concepts:** Phrases like \"load testing,\" \"stress testing,\" \"soak testing,\" \"spike testing,\" \"scalability testing,\" \"performance baseline,\" \"bottleneck analysis.\"\n-   **Technical Specifications:** Non-Functional Requirements (NFRs), Service Level Agreements (SLAs), Service Level Objectives (SLOs), system architecture diagrams.\n-   **Tooling & Configuration:** Configuration files (.conf, .yaml, .xml) for servers, applications, and databases. Scripts and results from tools like JMeter, Gatling, K6, LoadRunner.\n-   **System Components:** Information on thread pools, connection pools, cache configurations, load balancers, and message queues.\n-   **Reports & Logs:** Performance test reports, benchmark results, server logs, application performance monitoring (APM) dashboards, profiler output.\n-   **Data Points:** Tables or charts showing concurrent users, test duration, peak load, and average response times.\n\n#### Information to Ignore (Noise):\n-   Functional test cases and user acceptance testing (UAT) results.\n-   UI/UX design documents, wireframes, mockups, and visual design feedback.\n-   Marketing materials, sales figures, and end-user documentation.\n-   Project management artifacts like budgets, team schedules, or sprint planning boards.\n-   Source code comments related to business logic or UI functionality.\n-   Security audit reports, vulnerability scans, and penetration test results (unless they directly identify a performance degradation).\n-   User stories and requirements focused solely on feature behavior rather than performance characteristics."
}