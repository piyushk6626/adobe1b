{
  "main_persona": "Software Developer",
  "sub_persona": "Solutions Architect",
  "details": "#### Primary Objective:\nRetrieve information on system design patterns, technology comparisons, non-functional requirements, and integration strategies to guide the high-level architecture of robust and scalable software systems.\n\n#### Core Information to Retrieve:\n-   **Architectural Patterns:** Phrases like \"Microservices,\" \"Serverless,\" \"Event-Driven Architecture (EDA),\" \"Monolithic,\" \"Service-Oriented Architecture (SOA),\" \"CQRS.\"\n-   **System Diagrams:** Architecture diagrams, data flow diagrams, sequence diagrams, infrastructure diagrams, and technical schematics.\n-   **Cloud Services:** Specific services from AWS, Azure, and GCP (e.g., \"AWS Lambda,\" \"Azure Cosmos DB,\" \"Google Kubernetes Engine\"), and comparisons between them.\n-   **Database Technologies:** Keywords like \"SQL vs NoSQL,\" \"data modeling,\" \"sharding,\" \"replication,\" \"PostgreSQL,\" \"MongoDB,\" \"DynamoDB,\" \"Redis,\" \"database scalability.\"\n-   **API & Communication:** Terms such as \"REST,\" \"GraphQL,\" \"gRPC,\" \"API Gateway,\" \"API versioning,\" \"message queues\" (e.g., Kafka, RabbitMQ, SQS).\n-   **Non-Functional Requirements (NFRs):**\n    -   **Scalability:** \"horizontal scaling,\" \"vertical scaling,\" \"load balancing,\" \"auto-scaling.\"\n    -   **Performance:** \"latency,\" \"throughput,\" \"benchmarks,\" \"p99,\" \"response time.\"\n    -   **Reliability:** \"high availability (HA),\" \"fault tolerance,\" \"disaster recovery (DR),\" \"SLA,\" \"uptime.\"\n    -   **Security:** \"threat model,\" \"encryption in transit,\" \"encryption at rest,\" \"OAuth,\" \"OIDC,\" \"VPC,\" \"IAM,\" \"compliance\" (SOC 2, HIPAA, GDPR).\n    -   **Cost:** \"cost optimization,\" \"Total Cost of Ownership (TCO),\" \"pricing models.\"\n-   **Containerization & Orchestration:** \"Docker,\" \"Kubernetes (K8s),\" \"container orchestration,\" \"ECS,\" \"service mesh.\"\n-   **Integration:** Phrases like \"third-party integration,\" \"data migration strategy,\" \"ETL process,\" \"API contracts.\"\n-   **Observability:** Concepts related to \"logging,\" \"monitoring,\" \"distributed tracing,\" \"metrics,\" \"alerting.\"\n\n#### Information to Ignore (Noise):\n-   Specific, line-by-line code implementations or bug fixes.\n-   UI/UX design specifics like color palettes, font choices, or pixel-perfect mockups.\n-   Project management artifacts like daily stand-up notes, sprint backlogs, or individual task assignments.\n-   Marketing material, sales brochures, or end-user promotional content.\n-   Corporate financial reports, HR policies, and non-technical business memos.\n-   Detailed user stories or feature requests from a product backlog.\n-   Low-level IT support documentation (e.g., \"how to reset password,\" \"printer setup\")."
}